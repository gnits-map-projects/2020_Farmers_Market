{"ast":null,"code":"var _jsxFileName = \"/Users/macadmin/Downloads/f-m/src/components/User/listLocations.js\";\nimport React, { Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css';\nimport Select from 'react-select'; // import Note from 'styled-components';\n//import { GetLocations } from '/Users/macadmin/Downloads/f-m/src/components/home/getLocations.js';\n\nvar locationOptions;\nvar result;\nexport default class ListLocations extends Component {\n  constructor(props) {\n    super(props);\n\n    this.focus = () => {\n      console.log(this.selectRef);\n      this.selectRef.focus();\n    };\n\n    this.blur = () => this.selectRef.blur();\n\n    this.onSelectRef = ref => {\n      console.log(ref);\n      this.selectRef = ref;\n    };\n\n    this.state = {\n      'items': []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'http://localhost:9000/getlocations';\n    console.log(this.props.fid);\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers,\n      method: 'GET'\n    }).then(response => {\n      if (response.ok) {\n        result = response.json().then(result => {\n          console.log(result);\n          locationOptions = result;\n          console.log(locationOptions);\n        });\n      }\n    }); // .then(response => result = response.json()) \n    // .then(result => this.setState({ 'items' : result}));  \n    // console.log(s)\n    // alert(result) \n    // locationOptions =  this.state.items;       \n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 67\n      },\n      __self: this\n    }, React.createElement(Select, {\n      ref: ref => {\n        this.selectRef = ref;\n      },\n      defaultValue: \"Select Location\",\n      name: \"location\",\n      options: locationOptions,\n      onHover: this.focus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 68\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macadmin/Downloads/f-m/src/components/User/listLocations.js"],"names":["React","Component","Select","locationOptions","result","ListLocations","constructor","props","focus","console","log","selectRef","blur","onSelectRef","ref","state","componentDidMount","url","fid","headers","Headers","append","fetch","method","then","response","ok","json","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,4DAAP;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;AACA;;AAGA,IAAIC,eAAJ;AACA,IAAIC,MAAJ;AAEA,eAAe,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAYnDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACb,UAAMA,KAAN;;AADa,SAVnBC,KAUmB,GAVX,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAjB;AACA,WAAKA,SAAL,CAAeH,KAAf;AACD,KAOkB;;AAAA,SANnBI,IAMmB,GANZ,MAAM,KAAKD,SAAL,CAAeC,IAAf,EAMM;;AAAA,SALnBC,WAKmB,GALLC,GAAG,IAAI;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,WAAKH,SAAL,GAAiBG,GAAjB;AACD,KAEkB;;AAEb,SAAKC,KAAL,GAAa;AACT,eAAU;AADD,KAAb;AAGH;;AAEHC,EAAAA,iBAAiB,GAAE;AACjB,UAAMC,GAAG,GAAG,oCAAZ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWW,GAAvB;AACA,QAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AAEAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACAF,IAAAA,OAAO,CAACE,MAAR,CAAe,QAAf,EAAyB,kBAAzB;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,6BAAf,EAA8CJ,GAA9C;AACAE,IAAAA,OAAO,CAACE,MAAR,CAAe,kCAAf,EAAmD,MAAnD;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,MAAf,EAAuB,KAAvB;AAEAC,IAAAA,KAAK,CAACL,GAAD,EAAK;AACNE,MAAAA,OAAO,EAAEA,OADH;AAENI,MAAAA,MAAM,EAAE;AAFF,KAAL,CAAL,CAICC,IAJD,CAIMC,QAAQ,IAAI;AAAC,UAAGA,QAAQ,CAACC,EAAZ,EAAe;AAClCtB,QAAAA,MAAM,GAAGqB,QAAQ,CAACE,IAAT,GACRH,IADQ,CACHpB,MAAM,IAAI;AACdK,UAAAA,OAAO,CAACC,GAAR,CAAYN,MAAZ;AACAD,UAAAA,eAAe,GAAGC,MAAlB;AACAK,UAAAA,OAAO,CAACC,GAAR,CAAYP,eAAZ;AACD,SALQ,CAAT;AAMC;AAAC,KAXF,EAbiB,CA0BjB;AACA;AACA;AACA;AACA;AACD;;AAECyB,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEd,GAAG,IAAI;AACV,aAAKH,SAAL,GAAiBG,GAAjB;AACD,OAHH;AAIE,MAAA,YAAY,EAAC,iBAJf;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,OAAO,EAAEX,eANX;AAOE,MAAA,OAAO,EAAE,KAAKK,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAcH;;AAnEgD","sourcesContent":["import React ,{ Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css'\nimport Select from 'react-select';\n\n// import Note from 'styled-components';\n//import { GetLocations } from '/Users/macadmin/Downloads/f-m/src/components/home/getLocations.js';\n\n\nvar locationOptions\nvar result\n\nexport default class ListLocations extends Component {\n  selectRef: ElementRef<*>;\n  focus = () => {\n    console.log(this.selectRef);\n    this.selectRef.focus();\n  };\n  blur = () => this.selectRef.blur();\n  onSelectRef = ref => {\n    console.log(ref);\n    this.selectRef = ref;\n  };\n\n  constructor(props) {\n        super(props);\n        this.state = {\n            'items' : [],\n        };\n    }\n \n  componentDidMount(){\n    const url = 'http://localhost:9000/getlocations'\n    console.log(this.props.fid)\n    let headers = new Headers();\n\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n\n    headers.append('POST', 'GET');\n\n    fetch(url,{\n        headers: headers,\n        method: 'GET',\n    })\n    .then(response => {if(response.ok){\n    result = response.json()\n    .then(result => {\n      console.log(result)\n      locationOptions = result\n      console.log(locationOptions)\n    })\n    }})\n\n    // .then(response => result = response.json()) \n    // .then(result => this.setState({ 'items' : result}));  \n    // console.log(s)\n    // alert(result) \n    // locationOptions =  this.state.items;       \n  }\n\n    render(){\n        return (\n            <div>  \n            <Select\n              ref={ref => {\n                this.selectRef = ref;\n              }}\n              defaultValue=\"Select Location\"\n              name=\"location\"\n              options={locationOptions}\n              onHover={this.focus}/>\n            </div>\n\n                   \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/macadmin/Downloads/f-m/src/components/User/listLocations.js\";\nimport React, { Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css';\nimport Select from 'react-select'; // import Note from 'styled-components';\n//import { GetLocations } from '/Users/macadmin/Downloads/f-m/src/components/home/getLocations.js';\n\nvar locationOptions;\nvar result;\nvar i;\nvar tempJson;\nvar larray;\nexport default class ListLocations extends Component {\n  handleChange(selectedOption) {\n    this.setState({\n      'location': selectedOption.value\n    });\n    console.log(selectedOption.value);\n    console.log(this.state.location); //window.location.href  = \"/cropsIn/\" + this.state.location;\n  }\n\n  constructor(props) {\n    super(props);\n\n    this.focus = () => {\n      console.log(this.selectRef);\n      this.selectRef.focus();\n    };\n\n    this.state = {\n      'items': [],\n      'locationOptions': []\n    };\n    this.handleChange = this.handleChange.bind(this);\n  }\n\n  componentDidMount() {\n    const url = 'http://localhost:9000/getlocations';\n    console.log(this.props.fid);\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers,\n      method: 'GET'\n    }).then(response => {\n      if (response.ok) {\n        result = response.json().then(result => {\n          console.log(result);\n          larray = result;\n          console.log(typeof larray);\n\n          for (i = 0; i < larray.length; i++) {\n            tempJson = {};\n            var tag1 = 'value';\n            var value1 = larray[i];\n            var tag2 = 'label';\n            var value2 = larray[i];\n            tempJson[tag1] = value1;\n            tempJson[tag2] = value2;\n            console.log(tempJson);\n            this.state.locationOptions[i] = tempJson;\n            console.log(locationOptions);\n          }\n\n          console.log(\"locationOptions\", this.state.locationOptions);\n        });\n      }\n    }); // .then(response => result = response.json()) \n    // .then(result => this.setState({ 'items' : result}));  \n    // console.log(s)\n    // alert(result) \n    // locationOptions =  this.state.items;       \n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 95\n      },\n      __self: this\n    }, React.createElement(Select, {\n      ref: ref => {\n        this.selectRef = ref;\n      },\n      defaultValue: \"Select Location\",\n      name: \"location\",\n      options: this.state.locationOptions,\n      onMouseEnter: this.focus,\n      onChange: this.handleChange,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 96\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macadmin/Downloads/f-m/src/components/User/listLocations.js"],"names":["React","Component","Select","locationOptions","result","i","tempJson","larray","ListLocations","handleChange","selectedOption","setState","value","console","log","state","location","constructor","props","focus","selectRef","bind","componentDidMount","url","fid","headers","Headers","append","fetch","method","then","response","ok","json","length","tag1","value1","tag2","value2","render","ref"],"mappings":"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","sourcesContent":["import React ,{ Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css'\nimport Select from 'react-select';\n\n// import Note from 'styled-components';\n//import { GetLocations } from '/Users/macadmin/Downloads/f-m/src/components/home/getLocations.js';\n\n\nvar locationOptions\nvar result\nvar i\nvar tempJson\nvar larray\n\nexport default class ListLocations extends Component {\n  selectRef: ElementRef<*>;\n  focus = () => {\n    console.log(this.selectRef);\n    this.selectRef.focus();\n  };\n  \n  handleChange(selectedOption){\n    this.setState({\n      'location': selectedOption.value\n    });\n    console.log(selectedOption.value)\n    console.log(this.state.location)\n    //window.location.href  = \"/cropsIn/\" + this.state.location;\n  }\n\n  constructor(props) {\n        super(props);\n        this.state = {\n            'items' : [],\n            'locationOptions' : [],\n        };\n        this.handleChange = this.handleChange.bind(this);\n    }\n \n  componentDidMount(){\n    const url = 'http://localhost:9000/getlocations'\n    console.log(this.props.fid)\n    let headers = new Headers();\n\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n\n    headers.append('POST', 'GET');\n\n    fetch(url,{\n        headers: headers,\n        method: 'GET',\n    })\n    .then(response => {if(response.ok){\n    result = response.json()\n    .then(result => {\n      console.log(result)\n      larray = result\n      console.log(typeof larray)\n\n      \n      \n      for(i = 0; i < larray.length; i++ ){\n        tempJson = {}\n        var tag1 = 'value'\n        var value1 = larray[i]\n        var tag2 = 'label'\n        var value2 = larray[i]\n        tempJson[tag1] = value1\n        tempJson[tag2] = value2\n        console.log(tempJson)\n        this.state.locationOptions[i] = tempJson\n        console.log(locationOptions)\n      }\n\n      console.log(\"locationOptions\", this.state.locationOptions);\n      \n\n    })\n    }})\n\n    // .then(response => result = response.json()) \n    // .then(result => this.setState({ 'items' : result}));  \n    // console.log(s)\n    // alert(result) \n    // locationOptions =  this.state.items;       \n  }\n\n    render(){\n        return (\n            <div>  \n            <Select\n              ref={ref => {\n                this.selectRef = ref;\n              }}\n              defaultValue=\"Select Location\"\n              name=\"location\"\n              options={this.state.locationOptions}\n              onMouseEnter={this.focus}\n              onChange = {this.handleChange}/>\n            </div>\n\n                   \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}
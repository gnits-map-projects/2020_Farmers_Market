{"ast":null,"code":"var _jsxFileName = \"/Users/macadmin/Downloads/f-m/src/components/User/CropProfile.js\";\nimport React, { Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css';\nimport { Container } from \"react-bootstrap\";\nimport Col from 'react-bootstrap/Col';\nimport Row from 'react-bootstrap/Row';\n\nclass CropProfile extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      'crop': {},\n      id: this.props.id\n    };\n  }\n\n  componentDidMount() {\n    console.log(\"component did mount\");\n    const url = 'http://localhost:9000/getCrop/' + this.state.id;\n    console.log(this.state.id);\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    fetch(url, {\n      headers: headers\n    }).then(response => response.json()).then(response => this.setState({\n      'crop': response\n    }), console.log(this.state.crop)).catch(error => {\n      console.error('Error:', error);\n    });\n  }\n\n  render() {\n    // console.log(this.state.crop)\n    let s = this.state.crop;\n    return React.createElement(\"div\", {\n      className: \"recentbids\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      className: \"auth-inner\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default CropProfile;","map":{"version":3,"sources":["/Users/macadmin/Downloads/f-m/src/components/User/CropProfile.js"],"names":["React","Component","Container","Col","Row","CropProfile","constructor","props","state","id","componentDidMount","console","log","url","headers","Headers","append","fetch","then","response","json","setState","crop","catch","error","render","s"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,4DAAP;AACA,OAAO,gBAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,OAAOC,GAAP,MAAgB,qBAAhB;AACA,OAAOC,GAAP,MAAgB,qBAAhB;;AAEA,MAAMC,WAAN,SAA0BJ,SAA1B,CAAoC;AAChCK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;AACA,SAAKC,KAAL,GAAa;AACT,cAAS,EADA;AAETC,MAAAA,EAAE,EAAE,KAAKF,KAAL,CAAWE;AAFN,KAAb;AAIH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChBC,IAAAA,OAAO,CAACC,GAAR,CAAY,qBAAZ;AACA,UAAMC,GAAG,GAAG,mCAAiC,KAAKL,KAAL,CAAWC,EAAxD;AACAE,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWC,EAAvB;AACA,QAAIK,OAAO,GAAG,IAAIC,OAAJ,EAAd;AAEAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACAF,IAAAA,OAAO,CAACE,MAAR,CAAe,QAAf,EAAyB,kBAAzB;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,6BAAf,EAA8CH,GAA9C;AACAC,IAAAA,OAAO,CAACE,MAAR,CAAe,kCAAf,EAAmD,MAAnD;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,MAAf,EAAuB,KAAvB;AAEAC,IAAAA,KAAK,CAACJ,GAAD,EAAK;AACNC,MAAAA,OAAO,EAAEA;AADH,KAAL,CAAL,CAGCI,IAHD,CAGMC,QAAQ,IAAIA,QAAQ,CAACC,IAAT,EAHlB,EAICF,IAJD,CAIMC,QAAQ,IAAI,KAAKE,QAAL,CAAc;AAAE,cAASF;AAAX,KAAd,CAJlB,EAKAR,OAAO,CAACC,GAAR,CAAY,KAAKJ,KAAL,CAAWc,IAAvB,CALA,EAMCC,KAND,CAMQC,KAAD,IAAW;AAACb,MAAAA,OAAO,CAACa,KAAR,CAAc,QAAd,EAAwBA,KAAxB;AAAgC,KANnD;AAQH;;AAEDC,EAAAA,MAAM,GAAE;AACJ;AACA,QAAIC,CAAC,GAAC,KAAKlB,KAAL,CAAWc,IAAjB;AACA,WACI;AAAK,MAAA,SAAS,EAAG,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA;AAAK,MAAA,SAAS,EAAC,YAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAWH;;AA/C+B;;AAkDpC,eAAejB,WAAf","sourcesContent":["import React ,{ Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css'\nimport { Container } from \"react-bootstrap\";\nimport Col from 'react-bootstrap/Col'\nimport Row from 'react-bootstrap/Row'\n\nclass CropProfile extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            'crop' : {},\n            id: this.props.id,\n        };\n    }\n    \n    componentDidMount() {\n        console.log(\"component did mount\")\n        const url = 'http://localhost:9000/getCrop/'+this.state.id\n        console.log(this.state.id)\n        let headers = new Headers();\n\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n\n        headers.append('Access-Control-Allow-origin', url);\n        headers.append('Access-Control-Allow-Credentials', 'true');\n\n        headers.append('POST', 'GET');\n\n        fetch(url,{\n            headers: headers,\n        })\n        .then(response => response.json()) \n        .then(response => this.setState({ 'crop' : response}),\n        console.log(this.state.crop))\n        .catch((error) => {console.error('Error:', error);}); \n                  \n    }\n\n    render(){\n        // console.log(this.state.crop)\n        let s=this.state.crop\n        return (\n            <div className = \"recentbids\">\n            <div className=\"auth-inner\">\n                {/* {s.name}<br/>\n                {this.state.crop.location}<br/>\n                {this.state.crop.area}<br/>\n                {this.state.crop.duration}<br/>\n                {this.state.crop.price}<br/> */}\n            </div>\n            </div>\n        );\n    }\n}\n\nexport default CropProfile;\n\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/macadmin/Downloads/f-m/src/components/User/listLocations.js\";\nimport React, { Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css';\nimport Select from 'react-select'; // import Note from 'styled-components';\n//import { GetLocations } from '/Users/macadmin/Downloads/f-m/src/components/home/getLocations.js';\n\nvar locationOptions;\nvar result;\nexport default class ListLocations extends Component {\n  constructor(props) {\n    super(props);\n\n    this.focus = () => {\n      console.log(this.selectRef);\n      this.selectRef.focus();\n    };\n\n    this.blur = () => this.selectRef.blur();\n\n    this.onSelectRef = ref => {\n      console.log(ref);\n      this.selectRef = ref;\n    };\n\n    this.state = {\n      'items': []\n    };\n  }\n\n  componentDidMount() {\n    const url = 'http://localhost:9000/getlocations/';\n    console.log(this.props.fid);\n    let headers = new Headers();\n    headers.append('Content-Type', 'application/json');\n    headers.append('Accept', 'application/json');\n    headers.append('Access-Control-Allow-origin', url);\n    headers.append('Access-Control-Allow-Credentials', 'true');\n    headers.append('POST', 'GET');\n    let s = fetch(url, {\n      headers: headers\n    }).then(response => result = response.json()).then(result => this.setState({\n      'items': response\n    }));\n    console.log(s);\n    alert(s);\n    locationOptions = this.state.items;\n  }\n\n  render() {\n    return React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 57\n      },\n      __self: this\n    }, React.createElement(Select, {\n      ref: ref => {\n        this.selectRef = ref;\n      },\n      defaultValue: \"Select Location\",\n      name: \"location\",\n      options: locationOptions,\n      onHover: this.focus,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 58\n      },\n      __self: this\n    }));\n  }\n\n}","map":{"version":3,"sources":["/Users/macadmin/Downloads/f-m/src/components/User/listLocations.js"],"names":["React","Component","Select","locationOptions","result","ListLocations","constructor","props","focus","console","log","selectRef","blur","onSelectRef","ref","state","componentDidMount","url","fid","headers","Headers","append","s","fetch","then","response","json","setState","alert","items","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,4DAAP;AACA,OAAO,gBAAP;AACA,OAAOC,MAAP,MAAmB,cAAnB,C,CAEA;AACA;;AAGA,IAAIC,eAAJ;AACA,IAAIC,MAAJ;AAEA,eAAe,MAAMC,aAAN,SAA4BJ,SAA5B,CAAsC;AAYjDK,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACf,UAAMA,KAAN;;AADe,SAVrBC,KAUqB,GAVb,MAAM;AACZC,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKC,SAAjB;AACA,WAAKA,SAAL,CAAeH,KAAf;AACD,KAOoB;;AAAA,SANrBI,IAMqB,GANd,MAAM,KAAKD,SAAL,CAAeC,IAAf,EAMQ;;AAAA,SALrBC,WAKqB,GALPC,GAAG,IAAI;AACnBL,MAAAA,OAAO,CAACC,GAAR,CAAYI,GAAZ;AACA,WAAKH,SAAL,GAAiBG,GAAjB;AACD,KAEoB;;AAEf,SAAKC,KAAL,GAAa;AACT,eAAU;AADD,KAAb;AAGH;;AAEDC,EAAAA,iBAAiB,GAAG;AAChB,UAAMC,GAAG,GAAG,qCAAZ;AACAR,IAAAA,OAAO,CAACC,GAAR,CAAY,KAAKH,KAAL,CAAWW,GAAvB;AACA,QAAIC,OAAO,GAAG,IAAIC,OAAJ,EAAd;AAEAD,IAAAA,OAAO,CAACE,MAAR,CAAe,cAAf,EAA+B,kBAA/B;AACAF,IAAAA,OAAO,CAACE,MAAR,CAAe,QAAf,EAAyB,kBAAzB;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,6BAAf,EAA8CJ,GAA9C;AACAE,IAAAA,OAAO,CAACE,MAAR,CAAe,kCAAf,EAAmD,MAAnD;AAEAF,IAAAA,OAAO,CAACE,MAAR,CAAe,MAAf,EAAuB,KAAvB;AAEA,QAAIC,CAAC,GAAGC,KAAK,CAACN,GAAD,EAAK;AACdE,MAAAA,OAAO,EAAEA;AADK,KAAL,CAAL,CAGPK,IAHO,CAGFC,QAAQ,IAAIrB,MAAM,GAAGqB,QAAQ,CAACC,IAAT,EAHnB,EAIPF,IAJO,CAIFpB,MAAM,IAAI,KAAKuB,QAAL,CAAc;AAAE,eAAUF;AAAZ,KAAd,CAJR,CAAR;AAKAhB,IAAAA,OAAO,CAACC,GAAR,CAAYY,CAAZ;AACAM,IAAAA,KAAK,CAACN,CAAD,CAAL;AACAnB,IAAAA,eAAe,GAAI,KAAKY,KAAL,CAAWc,KAA9B;AACH;;AAEDC,EAAAA,MAAM,GAAE;AACJ,WACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACA,oBAAC,MAAD;AACE,MAAA,GAAG,EAAEhB,GAAG,IAAI;AACV,aAAKH,SAAL,GAAiBG,GAAjB;AACD,OAHH;AAIE,MAAA,YAAY,EAAC,iBAJf;AAKE,MAAA,IAAI,EAAC,UALP;AAME,MAAA,OAAO,EAAEX,eANX;AAOE,MAAA,OAAO,EAAE,KAAKK,KAPhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,CADJ;AAcH;;AAzDgD","sourcesContent":["import React ,{ Component } from 'react';\nimport '../../../node_modules/bootstrap/dist/css/bootstrap.min.css';\nimport './UserHome.css'\nimport Select from 'react-select';\n\n// import Note from 'styled-components';\n//import { GetLocations } from '/Users/macadmin/Downloads/f-m/src/components/home/getLocations.js';\n\n\nvar locationOptions\nvar result\n\nexport default class ListLocations extends Component {\n  selectRef: ElementRef<*>;\n  focus = () => {\n    console.log(this.selectRef);\n    this.selectRef.focus();\n  };\n  blur = () => this.selectRef.blur();\n  onSelectRef = ref => {\n    console.log(ref);\n    this.selectRef = ref;\n  };\n\n    constructor(props) {\n        super(props);\n        this.state = {\n            'items' : []\n        };\n    }\n    \n    componentDidMount() {\n        const url = 'http://localhost:9000/getlocations/'\n        console.log(this.props.fid)\n        let headers = new Headers();\n\n        headers.append('Content-Type', 'application/json');\n        headers.append('Accept', 'application/json');\n\n        headers.append('Access-Control-Allow-origin', url);\n        headers.append('Access-Control-Allow-Credentials', 'true');\n\n        headers.append('POST', 'GET');\n\n        let s = fetch(url,{\n            headers: headers,\n        })\n        .then(response => result = response.json()) \n        .then(result => this.setState({ 'items' : response}));  \n        console.log(s)\n        alert(s) \n        locationOptions =  this.state.items;       \n    }\n\n    render(){\n        return (\n            <div>  \n            <Select\n              ref={ref => {\n                this.selectRef = ref;\n              }}\n              defaultValue=\"Select Location\"\n              name=\"location\"\n              options={locationOptions}\n              onHover={this.focus}/>\n            </div>\n\n                   \n        );\n    }\n}"]},"metadata":{},"sourceType":"module"}